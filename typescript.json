{
	// Place your snippets for TypeScript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');"
		],
		"description": "Log output to console"
	},
	"Make communication action creators": {
		"prefix": "cac",
		"body": [
      "export const { execute: ${4:${1:a}${3:ctionName}}, completed: $4Success, failed: $4Fail } =",
      "\tmakeCommunicationActionCreators<NS.${5:I${2:A}$3}, NS.$5Success, NS.$5Fail>(",
      "\t\t'${6:PREFIX}:${7:ACTION_NAME}', '$6:$7_SUCCESS', '$6:$7_FAIL',",
      "\t);",
      "",
      "{",
      "\t${8:actionExecuting}: makeCommunicationReducer<NS.$5, NS.$5Success, NS.$5Fail>(",
      "\t\t'$6:$7',",
      "\t\t'$6:$7_SUCCESS',",
      "\t\t'$6:$7_FAIL',",
      "\t\tinitial.communication.$8,",
      "\t),",
      "} as ReducersMap<IReduxState['communication']>",
      "",
      "export interface $5 {",
      "\ttype: '$6:$7';",
      "}",
      "",
      "export interface $5Success {",
      "\ttype: '$6:$7_SUCCESS';",
      "}",
      "",
      "export interface $5Fail {",
      "\ttype: '$6:$7_FAIL';",
      "\terror: string;",
      "}",
      "",
      "export type Action = $5 | $5Success | $5Fail;"
		],
		"description": "Make communication action creators"
	}
}